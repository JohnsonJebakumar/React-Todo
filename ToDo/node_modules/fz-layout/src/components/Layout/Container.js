import React from 'react';
import PropTypes from 'prop-types';
import style from './Layout.css';
import { createProps, getClass } from '../../utils';

const propTypes = {
  reverse: PropTypes.bool,
  className: PropTypes.string,
  alignBox: PropTypes.string,
  children: PropTypes.node,
  tagName: PropTypes.string,
  hidden: PropTypes.array
};
function getContainerClassNames(props) {
  const modificators = [
    props.className,
    getClass(style, 'row'),
    getClass(style, 'cover')
  ];

  const hidden = props.hidden;
  if (hidden) {
    hidden.forEach(key => {
      modificators.push(getClass(style, 'hidden-screen-' + key));
    });
  }
  if (props.alignBox && props.alignBox == 'row') {
    modificators.push(getClass(style, 'rowdir'));
  } else {
    modificators.push(getClass(style, 'coldir'));
  }
  if (props.reverse) {
    modificators.push(getClass(style, 'reverse'));
  }
  if (props.wrap) {
    modificators.push(getClass(style, 'wrap'));
  }
  return modificators;
}

export function getContainerProps(props) {
  return createProps(propTypes, props, getContainerClassNames(props));
}

export default function Container(props) {
  return React.createElement(props.tagName || 'div', getContainerProps(props));
}

Container.propTypes = propTypes;
